/**
  Normalize the box model
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Remove inner padding from list elements
  that have a class attribute
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Remove outer margins from body and two other elements
  that have a class attribute
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Remove vertical outer margins from necessary elements
  that have a class attribute
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Remove the default list marker from unordered lists
  that have a class attribute
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Reset vertical outer margins for paragraphs,
  declare a local variable for bottom margin
  to avoid interaction with more complex selectors
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Bottom margin for paragraphs without a class attribute,
  that are not the last child among their sibling elements
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Simplify working with images and videos
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Inherit font properties for input fields
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
   Useful in most situations
   (e.g., when you need to "stick" the footer to the bottom of the site)
  */
  height: 100%;
  /**
   Remove horizontal interface jump
   when the scrollbar appears / disappears
  */
  scrollbar-gutter: stable;
}

/**
  Smooth scrolling
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
   Useful in most situations
   (e.g., when you need to "stick" the footer to the bottom of the site)
  */
  min-height: 100%;
  /**
   Unified line height
  */
  line-height: 1.5;
}

/**
  Normalize the height of the link element when inspecting in DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Pointer cursor on element hover
 */
button,
label {
  cursor: pointer;
}

/**
  Unify the color of svg elements
  (except those with a fill attribute already set to 'none' or starting with 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Unify the color of svg elements
  (except those with a stroke attribute already set to 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Fix the bug of color change delay when interacting with svg elements
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Set table borders to classic 'collapse' style
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Remove all animations and transitions for people
  who prefer not to use them
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../public/fonts/KumbhSans-Regular.woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../public/fonts/KumbhSans-Medium.woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../public/fonts/Inter-Regular.woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../public/fonts/Inter-Medium.woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../public/fonts/Inter-SemiBold.woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../public/fonts/Inter-Bold.woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #FFFFFF;
  --color-dark: #141414;
  --color-dark-10: #141414;
  --color-dark-15: #1A1A1A;
  --color-dark-40: #262626;
  --color-gray-50: #7E7E81;
  --color-gray-60: #98989A;
  --color-accent: #FFD11A;
  --color-red: #FF5500;
  --border: 0.0625rem solid var(--color-dark-15);
  --font-family-base: "Inter", sans-serif;
  --font-family-accent: "Kambh Sans", sans-serif;
  --container-width: 100rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 80rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(0.875rem, 0.8112745098rem + 0.2614379085vw, 1.125rem);
  font-family: var(--font-family-base);
  letter-spacing: -0.03rem;
  color: var(--color-gray-50);
  background-color: var(--color-dark);
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  color: var(--color-light);
}

h1,
.h1,
h2,
.h2,
h3,
.h3 {
  font-family: var(--font-family-accent);
  font-weight: 500;
}

h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-family: var(--font-family-accent);
  font-weight: 600;
}

h1,
.h1,
h2,
.h2,
h2,
.h3 {
  font-family: var(--font-family-accent);
}

h1,
.h1 {
  font-size: clamp(1.875rem, 1.237745098rem + 2.614379085vw, 4.375rem);
  line-height: 1.2;
}

h2,
.h2 {
  font-size: clamp(1.75rem, 1.2720588235rem + 1.9607843137vw, 3.625rem);
  line-height: 1.3;
}

h3,
.h3 {
  font-size: clamp(1.5rem, 1.2450980392rem + 1.045751634vw, 2.5rem);
  line-height: 1.5;
}

h4,
.h4 {
  font-size: clamp(1.125rem, 0.9975490196rem + 0.522875817vw, 1.625rem);
  line-height: 1.5;
}

h5,
.h5 {
  font-size: clamp(1.125rem, 1.0294117647rem + 0.3921568627vw, 1.5rem);
  line-height: 1.5;
}

h6,
.h6 {
  font-size: clamp(1rem, 0.9362745098rem + 0.2614379085vw, 1.25rem);
  line-height: 1.5;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-ligh);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

.icon {
  display: inline-flex;
  align-items: center;
  -moz-column-gap: 0.625rem;
       column-gap: 0.625rem;
}
.icon::after {
  --size: 1.5rem;
  width: var(--size);
  height: var(--size);
  content: "";
  flex-shrink: 0;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}
.icon--yellow-arrow::after {
  background-image: url("/src/public/icons/icon-arrow-up.svg");
}

.header__promo {
  padding-block: 1.25rem;
  text-align: center;
  border-bottom: var(--border);
}
.header__body {
  padding-block: 1.5rem;
  background-color: var(--color-ark-10);
}
.header__body-inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}
@media (width > 47.99875rem) {
  .header__overlay {
    display: contents;
  }
}/*# sourceMappingURL=main.css.map */